Display UI
User will see the landing page, which is the login page
There will be an option below the the log in page where the user can register of they do not have an account
Once the user is registered/ logged in they will automatically be redirected to the homepage
Once the user is on the home page:
1. there will be a search bar for user to search ro recipes search
2. the will be an option for the user to add more recipes

There should be a page where the user will ne allowed to add new recipes
One the user clicks on a recipe that they want to try the will get more details of the recipe.
1. Name of dish
2.The preperation time
3.List of ingredients
4. Cooking time
5. Servings



function RegistrationPage() {
  const [name, setName] = useState('');
  const [surname, setSurname] = useState('');
  const [email, setEmail] = useState('');
  const [role, setRole] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [error, setError] = useState('');

  const AddUser = (e) => {
    e.preventDefault();

    if (password !== confirmPassword) {
      setError("Passwords do not match!");
      return;
    }

    const newUser = { name, surname, email, role, password, confirmPassword };

    localStorage.setItem('name', name);
    localStorage.setItem('surname', surname);
    localStorage.setItem('email', email);
    localStorage.setItem('role', role);
    localStorage.setItem('password', password);
    localStorage.setItem('confirmPassword', confirmPassword);

    // Send data to the backend
    axios.post("http://localhost:3000/users", newUser)
      .then(() => {
        console.log("User registered successfully!");
        // Clear the form fields after successful registration
        setName('');
        setSurname('');
        setEmail('');
        setRole('');
        setPassword('');
        setConfirmPassword('');
        setError(''); // Reset error
      })
      .catch((error) => console.error("Error registering user:", error));
  };

  return (
    <div className="signup-box">
      <h1>Sign up</h1>
      <form onSubmit={AddUser}>
        <input
          type="text"
          placeholder="First Name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        /><br />
        <input
          type="text"
          placeholder="Last Name"
          value={surname}
          onChange={(e) => setSurname(e.target.value)}
          required
        /><br />
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        /><br />
        <input
          type="text"
          placeholder="Role"
          value={role}
          onChange={(e) => setRole(e.target.value)}
          required
        /><br />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        /><br />
        <input
          type="password"
          placeholder="Confirm Password"
          value={confirmPassword}
          onChange={(e) => setConfirmPassword(e.target.value)}
          required
        /><br />
        <div className="card">
          <img
            src="https://i0.wp.com/digitalhealthskills.com/wp-content/uploads/2022/11/3da39-no-user-image-icon-27.png?fit=500%2C500&ssl=1"
            alt="User"
            width="150px"
          />
          <input type="file" accept="image/jpeg, image/png, image/jpg" id="input-file" />
          <label htmlFor="input-file" id="update-img">Update</label>
        </div>
        {error && <p style={{ color: "red" }}>{error}</p>}
        <button type="submit">Sign Up</button>
      </form>
    </div>
  );
}

export default RegistrationPage;
